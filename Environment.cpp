#include "Environment.h"
#include "World.h"

environment::environment(Vector2f pos) {
    this->setPos(pos);
}

environment::environment(float x, float y) {
    this->setPos(x, y);
}

environment::~environment() {

}

void grass::setHasEaten() {
    hasEaten = true;
}

void grass::draw() {
    sf::RectangleShape shape_g(sf::Vector2f(2, 2));
    char grass_fresh[13][14] = {
{'0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '1', '0', '0', '0'},
{'0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0'},
{'0', '1', '1', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0'},
{'0', '1', '1', '0', '0', '1', '1', '0', '0', '1', '1', '0', '0', '0'},
{'0', '1', '1', '0', '0', '1', '1', '0', '0', '1', '1', '1', '0', '0'},
{'1', '2', '1', '0', '0', '1', '2', '1', '0', '1', '1', '1', '0', '0'},
{'1', '2', '1', '0', '0', '1', '2', '2', '0', '2', '1', '1', '0', '0'},
{'1', '3', '1', '0', '0', '1', '2', '2', '0', '2', '2', '1', '1', '0'},
{'1', '2', '1', '0', '0', '1', '2', '2', '0', '0', '2', '1', '2', '0'},
{'0', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '0'},
{'0', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '2', '2', '0'},
{'0', '1', '1', '2', '1', '1', '1', '1', '2', '2', '2', '2', '2', '0'},
{'0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0'} };
    char grass_normal[13][14] = {
{'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
{'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
{'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
{'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
{'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
{'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0'},
{'0', '0', '0', '0', '0', '0', '2', '0', '0', '0', '1', '0', '0', '0'},
{'0', '0', '1', '0', '0', '1', '2', '0', '0', '2', '2', '1', '0', '0'},
{'0', '0', '1', '0', '0', '1', '2', '2', '0', '0', '2', '1', '0', '0'},
{'0', '0', '1', '1', '1', '1', '2', '2', '1', '1', '2', '2', '0', '0'},
{'0', '0', '1', '1', '1', '1', '2', '2', '1', '1', '2', '2', '0', '0'},
{'0', '0', '1', '2', '1', '1', '1', '1', '2', '2', '2', '2', '0', '0'},
{'0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0'} };
    char grass_dying[13][14] = {
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '2', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '1', '2', '0', '1', '0', '2', '0', '0', '0'},
    {'0', '0', '0', '0', '1', '1', '2', '0', '1', '1', '2', '0', '0', '0'},
    {'0', '0', '0', '2', '1', '1', '1', '0', '2', '2', '2', '2', '0', '0'},
    {'0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0'} };

    sf::RectangleShape grass;

    if (age > 500) {
        shape_g.setFillColor(sf::Color(0, 144, 0));
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j < 14; j++) {
                if (grass_fresh[i][j] != '0') {
                    shape_g.setPosition(pos.x + j * 2, pos.y + i * 2);
                    world.window->draw(shape_g);
                }
            }
        }
    }

    else if (250 < age && age <= 500) {
        shape_g.setFillColor(sf::Color(90, 144, 0));
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j < 14; j++) {
                if (grass_normal[i][j] != '0') {
                    shape_g.setPosition(pos.x + j * 2, pos.y + i * 2);
                    world.window->draw(shape_g);
                }
            }
        }
    }
    else {
        shape_g.setFillColor(sf::Color(102, 51, 0));
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j < 14; j++) {
                if (grass_dying[i][j] != '0') {
                    shape_g.setPosition(pos.x + j * 2, pos.y + i * 2);
                    world.window->draw(shape_g);
                }
            }
        }
    }
}

void grass::minus_age() {
    age--;
}

//debug ¿ëµµ
int grass::getAge() {
    return age;
}

void grass::isDead() {
    if (hasEaten || age < 0) {
        setPos(0, 0);
    }
}

void grass::update(int dt) {
    isDead();
    minus_age();
}

int grass::get_type() {
    return GRASS;
}

grass::grass(float x, float y) :environment(x, y) {};